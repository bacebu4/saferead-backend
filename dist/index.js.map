{"version":3,"sources":["utils/extract.util.js","utils/decode.util.js","utils/html.util.js","utils/email.util.js","utils/txt.util.js","utils/validate.util.js","utils/index.js","db/getNotes.js","db/getIdByEmail.js","db/markAsSeen.js","db/resetSeenFlag.js","db/addAuthor.js","db/addBook.js","db/addNotes.js","db/getTagNotes.js","db/getAmount.js","db/getAllTags.js","db/getAccountInfo.js","db/getLatestBooks.js","db/addUser.js","db/index.js","services/update.service.js","services/messages.service.js","services/notes.service.js","services/info.service.js","services/register.service.js","services/index.js","controllers/messages.controller.js","controllers/notes.controller.js","controllers/info.controller.js","controllers/register.controller.js","controllers/index.js","routes/index.js","index.js"],"names":["extract","string","openTag","closeTag","slice","indexOf","length","trim","extractAndCut","resultArray","type","extracted","push","extractedNote","extractedComment","module","exports","decode","base64","utfNumber","buff","Buffer","from","toString","require","extractNotes","html","openCommentTag","extractedNotes","extractTitle","extractAuthor","extractAll","data","encodedHtml","payload","parts","body","extractedAuthor","extractedTitle","findFromHeader","header","headers","name","value","extractEmail","deleteQuotes","extractTxtNotes","split","pop","forEach","note","i","notes","splittedNote","attachment","bodyText","attachmentText","validate","appleTagIndex","Math","max","attachmentId","mimeType","htmlUtils","emailUtils","decodeUtils","txtUtils","validateUtils","getNotes","id","raw","manager","query","getIdByEmail","email","includes","replace","user_id","markAsSeen","resetSeenFlag","v4","uuidv4","addAuthor","author","author_id","newGeneratedId","addBook","authorId","title","book_id","addNote","userId","bookId","newGeneratedNoteId","newGeneratedCommentId","addNotes","getTagNotes","getAmount","review_amount","getAllTags","getAccountInfo","getLatestBooks","addUser","hashUid","createConnection","init","connection","process","env","DATABASE_URL","url","console","log","host","port","DB_PORT","username","password","database","error","db","messageService","start","extractedEmail","deleteMessageById","google","fs","path","updateService","CLIENT","TOKEN_PATH","join","__dirname","startWatch","auth","gmail","version","setTimeout","users","watch","resource","topicName","authorize","credentials","client_secret","client_id","redirect_uris","installed","oAuth2Client","OAuth2","readFile","err","token","parsedToken","JSON","parse","setCredentials","pathToCredentials","content","getMessageById","messages","get","attachments","messageId","trash","listMessages","list","map","m","newMessageEvent","getMessageQueue","updatingQueue","deletingQueue","Promise","all","d","getRandomNotes","amount","markAsSeenQueue","note_id","usedIndexes","Set","repeatedIndex","newRandomIndex","floor","random","has","add","newData","randomNotes","getNotesWithTags","noteWithTags","tagQueue","tags","t","getInitInfo","allAccountInfo","createdat","accountInfo","latestBooks","bcrypt","register","findResults","salt","genSalt","hash","uid","newUserId","messagesService","notesService","infoService","registerService","_","res","message","json","req","sendStatus","getDailyNotes","set","notesWithTags","info","status","send","express","router","Router","post","config","app","cors","routes","use","PORT","listen"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["const extract = (string, openTag, closeTag) => string.slice(string.indexOf(openTag) + openTag.length, string.indexOf(closeTag)).trim();\n\nconst extractAndCut = (string, openTag, closeTag, resultArray, type) => {\n  string = string.slice(string.indexOf(openTag) + openTag.length + 1);\n  let extracted = string.slice(0, string.indexOf(closeTag));\n  string = string.slice(extracted.length);\n  extracted = extracted.trim();\n\n  if (type === 'note' && extracted) {\n    resultArray.push({\n      extractedNote: extracted,\n    });\n  } else if (type === 'comment' && extracted) {\n    resultArray[resultArray.length - 1].extractedComment = extracted;\n  }\n  return string;\n};\n\nmodule.exports = {\n  extract,\n  extractAndCut,\n};\n","const decode = (base64, utfNumber) => {\n  const buff = Buffer.from(base64, 'base64');\n  return buff.toString(utfNumber);\n};\n\nmodule.exports = {\n  decode,\n};\n","const { extract, extractAndCut } = require('./extract.util');\nconst { decode } = require('./decode.util');\n\n/* eslint-disable no-useless-escape */\nconst extractNotes = (html) => {\n  const openTag = '<p class=\\\"annotationrepresentativetext\\\">\\r\\n';\n  const closeTag = '</p>\\r\\n';\n  const openCommentTag = '<p class=\\\"annotationnote\\\">\\r\\n';\n  const extractedNotes = [];\n  while (html.indexOf(openTag) !== -1) {\n    html = extractAndCut(html, openTag, closeTag, extractedNotes, 'note');\n    html = extractAndCut(html, openCommentTag, closeTag, extractedNotes, 'comment');\n  }\n  return extractedNotes;\n};\n\nconst extractTitle = (html) => {\n  const openTag = '<h1 class=\\\"booktitle\\\" style=\\\"margin-top:-5px;\\\" width=\\\"80%\\\">';\n  const closeTag = '</h1>';\n  return extract(html, openTag, closeTag);\n};\n\nconst extractAuthor = (html) => {\n  const openTag = '<h2 style=\\\"margin-top:-20px; font-family:Helvetica Neue, Arial, Sans-Serif;font-weight:normal;font-size:23px;color:rgb(26,26,26);line-height:26px; word-break: break-word; text-align:center; margin-bottom:46px;\\\">';\n  const closeTag = '</h2>';\n  return extract(html, openTag, closeTag);\n};\n\nconst extractAll = (data) => {\n  const encodedHtml = data.data.payload.parts[1].body.data;\n  const html = decode(encodedHtml, 'utf-8');\n\n  return {\n    extractedAuthor: extractAuthor(html),\n    extractedTitle: extractTitle(html),\n    extractedNotes: extractNotes(html),\n  };\n};\n\nmodule.exports = {\n  extractAll,\n};\n","const { extract } = require('./extract.util');\n\nconst findFromHeader = (data) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const header of data.data.payload.headers) {\n    if (header.name === 'From') {\n      return header.value;\n    }\n  }\n};\n\nconst extractEmail = (data) => {\n  const value = findFromHeader(data);\n  return extract(value, '<', '>');\n};\n\nmodule.exports = {\n  extractEmail,\n};\n","const { extract } = require('./extract.util');\nconst { decode } = require('./decode.util');\n\nconst deleteQuotes = (string) => {\n  string = string.slice(1, string.length - 1);\n  return string;\n};\n\nconst extractTxtNotes = (string) => {\n  const extractedNotes = string.split('\\n\\n\\n');\n  extractedNotes.pop();\n\n  extractedNotes.forEach((note, i, notes) => {\n    const splittedNote = note.split('\\n\\n');\n    if (splittedNote.length === 2) {\n      notes[i] = {\n        extractedNote: deleteQuotes(splittedNote[0].trim()),\n        extractedComment: splittedNote[1],\n      };\n    } else {\n      notes[i] = {\n        extractedNote: deleteQuotes(note.trim()),\n      };\n    }\n  });\n  return extractedNotes;\n};\n\nconst extractAll = (data, attachment) => {\n  const bodyText = decode(data.data.payload.parts[0].body.data, 'utf-8');\n  const attachmentText = decode(attachment.data.data, 'utf16le');\n\n  const extractedNotes = extractTxtNotes(attachmentText);\n\n  const extractedTitle = bodyText.slice(0, bodyText.indexOf('\\r\\n'));\n\n  const extractedAuthor = extract(bodyText, '\\r\\n', '\\r\\n\\r\\n');\n  return {\n    extractedAuthor,\n    extractedTitle,\n    extractedNotes,\n  };\n};\n\nmodule.exports = {\n  extractAll,\n};\n","const { decode } = require('./decode.util');\n\nconst validate = (data) => {\n  let encodedHtml;\n  if (data.data.payload.parts?.length > 1) {\n    encodedHtml = data.data.payload.parts[1].body.data;\n  }\n  if (encodedHtml) {\n    const html = decode(encodedHtml, 'utf-8');\n    const appleTagIndex = Math.max(html.indexOf('Apple Books. <br>'), html.indexOf('Книги. <br>'));\n    if (appleTagIndex !== -1) {\n      return 'ibooks';\n    }\n  } else {\n    let attachmentId;\n    let mimeType;\n    if (data.data.payload.parts?.length > 1) {\n      attachmentId = data.data.payload.parts[1].body?.attachmentId;\n      mimeType = data.data.payload.parts[1].mimeType;\n    }\n\n    if (attachmentId && mimeType === 'text/plain') {\n      return 'litres';\n    }\n  }\n  return 'empty';\n};\n\nmodule.exports = {\n  validate,\n};\n","const htmlUtils = require('./html.util');\nconst emailUtils = require('./email.util');\nconst decodeUtils = require('./decode.util');\nconst txtUtils = require('./txt.util');\nconst validateUtils = require('./validate.util');\n\nmodule.exports = {\n  htmlUtils,\n  emailUtils,\n  decodeUtils,\n  txtUtils,\n  validateUtils,\n};\n","import { manager } from \"./index\";\n\nconst getNotes = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select note_text, comment_text, book_title, author_full_name, n.note_id\n    from users\n        join notes n on users.user_id = n.user_id\n        join books b on n.book_id = b.book_id\n        join authors a on b.author_id = a.author_id\n        left join comments c on n.note_id = c.note_id\n    where users.user_id = $1 and seen = false;\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getNotes,\n};\n","import { manager } from \"./index\";\n\nconst getIdByEmail = async (email) => {\n  if (email.includes(\"@me.com\")) {\n    email = email.replace(\"@me.com\", \"@icloud.com\");\n  }\n  const data = await manager.query(\n    /* sql */ `\n    select user_id\n    from users\n    where email = $1;\n  `,\n    [email],\n  );\n\n  if (data.length) {\n    return data[0].user_id;\n  }\n  return \"\";\n};\n\nmodule.exports = {\n  getIdByEmail,\n};\n","import { manager } from './index';\n\nconst markAsSeen = async (id) => {\n  await manager.query(/* sql */`\n    update notes\n    set seen = true\n    where note_id = $1;\n  `, [id]);\n};\n\nmodule.exports = {\n  markAsSeen,\n};\n","import { manager } from './index';\n\nconst resetSeenFlag = async (id) => {\n  await manager.query(/* sql */`\n    update notes\n    set seen = false\n    where user_id = $1;\n  `, [id]);\n};\n\nmodule.exports = {\n  resetSeenFlag,\n};\n","import { manager } from './index';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst addAuthor = async (author) => {\n  const data = await manager.query(/* sql */`\n    select author_id\n    from authors\n    where author_full_name = $1;\n  `, [author]);\n\n  if (data.length) {\n    return data[0].author_id;\n  }\n\n  const newGeneratedId = uuidv4();\n\n  await manager.query(/* sql */`\n    insert into authors(author_id, author_full_name) values ($1, $2);\n  `, [newGeneratedId, author]);\n\n  return newGeneratedId;\n};\n\nmodule.exports = {\n  addAuthor,\n};\n","import { manager } from './index';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst addBook = async (authorId, title) => {\n  const data = await manager.query(/* sql */`\n    select book_id\n    from books\n    where book_title = $1;\n  `, [title]);\n\n  if (data.length) {\n    return data[0].book_id;\n  }\n\n  const newGeneratedId = uuidv4();\n\n  await manager.query(/* sql */`\n    insert into books(book_id, author_id, book_title) VALUES ($1, $2, $3);\n  `, [newGeneratedId, authorId, title]);\n\n  return newGeneratedId;\n};\n\nmodule.exports = {\n  addBook,\n};\n","import { manager } from './index';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst addNote = async (userId, bookId, note) => {\n  const newGeneratedNoteId = uuidv4();\n  await manager.query(/* sql */`\n    insert into notes(user_id, book_id, createdAt, updatedAt, note_text, seen, note_id)\n    VALUES ($1, $2, now(), now(), $3, false, $4);\n  `, [userId, bookId, note.extractedNote, newGeneratedNoteId]);\n\n  if (note?.extractedComment) {\n    const newGeneratedCommentId = uuidv4();\n    await manager.query(/* sql */`\n      insert into comments(note_id, comment_text, createdAt, updatedAt, comment_id) VALUES ($1, $2, now(), now(), $3);\n  `, [newGeneratedNoteId, note.extractedComment, newGeneratedCommentId]);\n  }\n};\n\nconst addNotes = async (userId, bookId, notes) => {\n  // TODO delete restricted syntax\n  // eslint-disable-next-line no-restricted-syntax\n  for (const note of notes) {\n    await addNote(userId, bookId, note);\n  }\n};\n\nmodule.exports = {\n  addNotes,\n};\n","import { manager } from \"./index\";\n\nconst getTagNotes = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select *\n    from notes_tags\n    join tags t on notes_tags.tag_id = t.tag_id\n    where note_id = $1;\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getTagNotes,\n};\n","import { manager } from \"./index\";\n\nconst getAmount = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select review_amount\n    from users\n    where users.user_id = $1\n  `,\n    [id],\n  );\n  return raw[0].review_amount;\n};\n\nmodule.exports = {\n  getAmount,\n};\n","import { manager } from \"./index\";\n\nconst getAllTags = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select tag_id, tag_name, hue\n    from tags\n    where user_id = $1\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getAllTags,\n};\n","import { manager } from \"./index\";\n\nconst getAccountInfo = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select *\n    from users\n    where user_id = $1\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getAccountInfo,\n};\n","import { manager } from \"./index\";\n\nconst getLatestBooks = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select distinct book_title, author_full_name, book_id from (\n      select distinct book_title, author_full_name, createdAt, b.book_id from notes\n          join books b on notes.book_id = b.book_id\n          join authors a on a.author_id = b.author_id\n          where user_id = $1\n          order by createdAt desc\n      ) as t\n    limit 10\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getLatestBooks,\n};\n","import { manager } from \"./index\";\n\nconst addUser = async (id, email, hashUid) => {\n  const data = await manager.query(\n    /* sql */ `\n    insert into \n    users(user_id, review_amount, streak, missed, current, reviewed, createdAt, email, uid) \n    VALUES ($1, 3, 0, 0, 0, false, now(), $2, $3)\n  `,\n    [id, email, hashUid],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  addUser,\n};\n","const { createConnection } = require(\"typeorm\");\nrequire(\"reflect-metadata\");\nconst { getNotes } = require(\"./getNotes\");\nconst { getIdByEmail } = require(\"./getIdByEmail\");\nconst { markAsSeen } = require(\"./markAsSeen\");\nconst { resetSeenFlag } = require(\"./resetSeenFlag\");\nconst { addAuthor } = require(\"./addAuthor\");\nconst { addBook } = require(\"./addBook\");\nconst { addNotes } = require(\"./addNotes\");\nconst { getTagNotes } = require(\"./getTagNotes\");\nconst { getAmount } = require(\"./getAmount\");\nconst { getAllTags } = require(\"./getAllTags\");\nconst { getAccountInfo } = require(\"./getAccountInfo\");\nconst { getLatestBooks } = require(\"./getLatestBooks\");\nconst { addUser } = require(\"./addUser\");\n\n// eslint-disable-next-line import/no-mutable-exports\nlet manager;\n\nconst init = async () => {\n  try {\n    let connection;\n    if (process.env.DATABASE_URL) {\n      connection = await createConnection({\n        type: \"postgres\",\n        url: process.env.DATABASE_URL,\n      });\n      console.log(\"Connected to DB @ heroku\");\n    } else {\n      connection = await createConnection({\n        type: \"postgres\",\n        host: \"localhost\",\n        port: process.env.DB_PORT,\n        username: \"postgres\",\n        password: \"123\",\n        database: \"postgres\",\n        // logging: true,\n      });\n      console.log(\"Connected to DB locally\");\n    }\n    manager = connection.manager;\n  } catch (error) {\n    console.error(\"Unable to connect to the database:\", error);\n  }\n};\n\nmodule.exports = {\n  init,\n  getNotes,\n  markAsSeen,\n  resetSeenFlag,\n  addAuthor,\n  addBook,\n  addNotes,\n  getIdByEmail,\n  getTagNotes,\n  getAmount,\n  getAllTags,\n  getAccountInfo,\n  getLatestBooks,\n  addUser,\n};\n\nexport {\n  // eslint-disable-next-line import/prefer-default-export\n  manager,\n};\n","const db = require('../db');\nconst messageService = require('./messages.service');\n\nasync function start(data, id) {\n  try {\n    const authorId = await db.addAuthor(data.extractedAuthor);\n    console.log('authorId: ', authorId);\n\n    const bookId = await db.addBook(authorId, data.extractedTitle);\n    console.log('bookId: ', bookId);\n\n    const userId = await db.getIdByEmail(data.extractedEmail);\n    if (userId) {\n      await db.addNotes(userId, bookId, data.extractedNotes);\n    } else {\n      console.log('User was not found');\n    }\n  } catch (error) {\n    console.log('Error during adding note to db. The message will be deleted');\n    console.log(error);\n    messageService.deleteMessageById(id);\n  }\n}\n\nmodule.exports = {\n  start,\n};\n","const { google } = require('googleapis');\nconst fs = require('fs');\nconst path = require('path');\nconst { htmlUtils } = require('../utils');\nconst { emailUtils } = require('../utils');\nconst { txtUtils } = require('../utils');\nconst { validateUtils } = require('../utils');\nconst updateService = require('./update.service');\n\nlet CLIENT;\nconst TOKEN_PATH = path.join(__dirname, 'token.json');\n\nfunction startWatch(auth) {\n  const gmail = google.gmail({ version: 'v1', auth });\n  console.log('New watching started: once in 7 days');\n  setTimeout(() => {\n    startWatch(CLIENT);\n  }, 1000 * 60 * 60 * 24 * 6);\n  return gmail.users.watch({\n    userId: 'me',\n    resource: {\n      topicName: 'projects/safe-read/topics/new',\n    },\n  });\n}\n\nfunction authorize(credentials) {\n  // eslint-disable-next-line camelcase\n  const { client_secret, client_id, redirect_uris } = credentials.installed;\n  const oAuth2Client = new google.auth.OAuth2(\n    client_id, client_secret, redirect_uris[0],\n  );\n\n  fs.readFile(TOKEN_PATH, async (err, token) => {\n    const parsedToken = JSON.parse(token);\n    oAuth2Client.setCredentials(parsedToken);\n    CLIENT = oAuth2Client;\n    await startWatch(CLIENT);\n  });\n}\n\nconst init = () => {\n  const pathToCredentials = path.join(__dirname, 'credentials.json');\n  fs.readFile(pathToCredentials, (err, content) => {\n    if (err) return console.log('Error loading client secret file:', pathToCredentials);\n    authorize(JSON.parse(content));\n  });\n};\n\nconst getMessageById = async (id) => {\n  const auth = CLIENT;\n  const gmail = google.gmail({ version: 'v1', auth });\n  const data = await gmail.users.messages.get({\n    userId: 'me',\n    id,\n  });\n\n  const extractedEmail = emailUtils.extractEmail(data);\n\n  const validate = validateUtils.validate(data);\n\n  if (validate === 'ibooks') {\n    return {\n      extractedEmail,\n      ...htmlUtils.extractAll(data),\n    };\n  } if (validate === 'litres') {\n    const attachmentId = data.data.payload.parts[1].body?.attachmentId;\n    const attachment = await gmail.users.messages.attachments.get({\n      userId: 'me',\n      messageId: id,\n      id: attachmentId,\n    });\n\n    return {\n      extractedEmail,\n      ...txtUtils.extractAll(data, attachment),\n    };\n  }\n  return validate;\n};\n\nconst deleteMessageById = async (id) => {\n  const auth = CLIENT;\n  const gmail = google.gmail({ version: 'v1', auth });\n  await gmail.users.messages.trash({\n    userId: 'me',\n    id,\n  });\n};\n\nconst listMessages = async () => {\n  const auth = CLIENT;\n  const gmail = google.gmail({ version: 'v1', auth });\n  const data = await gmail.users.messages.list({\n    userId: 'me',\n  });\n  if (data.data?.messages) {\n    return data.data.messages.map((m) => m.id);\n  }\n  console.log('No new messages');\n  return [];\n};\n\nconst newMessageEvent = async () => {\n  try {\n    console.log('Checking inbox');\n    const messages = await listMessages();\n    if (messages.length) {\n      const getMessageQueue = [];\n      const updatingQueue = [];\n      const deletingQueue = [];\n\n      messages.forEach((m) => {\n        getMessageQueue.push(getMessageById(m));\n      });\n      const data = await Promise.all(getMessageQueue);\n      data.forEach((d) => {\n        if (d !== 'empty') {\n          updatingQueue.push(updateService.start(d));\n        } else {\n          console.log('empty');\n        }\n      });\n      await Promise.all(updatingQueue);\n\n      messages.forEach((m) => {\n        deletingQueue.push(deleteMessageById(m));\n      });\n\n      await Promise.all(deletingQueue);\n    }\n  } catch (error) {\n    console.log('Error occurred', error);\n  } finally {\n    console.log('Event ended');\n  }\n};\n\nmodule.exports = {\n  getMessageById,\n  listMessages,\n  newMessageEvent,\n  init,\n  deleteMessageById,\n};\n","const db = require(\"../db\");\n\nasync function getRandomNotes(data, amount) {\n  const markAsSeenQueue = [];\n\n  // fallback when amount of notes less than needed amount\n  if (data.length <= amount) {\n    for (let i = 0; i < data.length; i += 1) {\n      markAsSeenQueue.push(db.markAsSeen(data[i].note_id));\n    }\n    await Promise.all(markAsSeenQueue);\n    return data;\n  }\n\n  const usedIndexes = new Set();\n\n  for (let i = 0; i < amount; i += 1) {\n    let repeatedIndex = true;\n    let newRandomIndex;\n    while (repeatedIndex) {\n      newRandomIndex = Math.floor(Math.random() * data.length);\n      if (!usedIndexes.has(newRandomIndex)) {\n        repeatedIndex = false;\n        usedIndexes.add(newRandomIndex);\n        markAsSeenQueue.push(db.markAsSeen(data[newRandomIndex].note_id));\n      }\n    }\n  }\n\n  await Promise.all(markAsSeenQueue);\n\n  const newData = [];\n\n  usedIndexes.forEach((i) => {\n    newData.push(data[i]);\n  });\n\n  return newData;\n}\n\nasync function getNotes(id) {\n  const amount = await db.getAmount(id);\n  let data = await db.getNotes(id);\n  if (data.length < amount) {\n    await db.resetSeenFlag(id);\n    data = await db.getNotes(id);\n  }\n\n  const randomNotes = await getRandomNotes(data, amount);\n  return randomNotes;\n}\n\nasync function getNotesWithTags(notes) {\n  const noteWithTags = [...notes];\n  const tagQueue = [];\n  notes.forEach((note) => {\n    tagQueue.push(db.getTagNotes(note.note_id));\n  });\n  const tags = await Promise.all(tagQueue);\n  tags.forEach((t, i) => {\n    noteWithTags[i].tags = t;\n  });\n  return noteWithTags;\n}\n\nmodule.exports = {\n  getNotes,\n  getNotesWithTags,\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\nconst db = require(\"../db\");\n\nasync function getInitInfo(id) {\n  const tags = await db.getAllTags(id);\n  const allAccountInfo = await db.getAccountInfo(id);\n  const { user_id, createdat, email, ...accountInfo } = allAccountInfo[0];\n  const latestBooks = await db.getLatestBooks(id);\n  return { tags, accountInfo, latestBooks };\n}\n\nmodule.exports = {\n  getInitInfo,\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\nconst bcrypt = require(\"bcryptjs\");\nconst { v4: uuidv4 } = require(\"uuid\");\nconst db = require(\"../db\");\n\nasync function register(payload) {\n  const findResults = await db.getIdByEmail(payload.email);\n  console.log(findResults);\n  if (findResults !== \"\") {\n    return \"Email is already taken\";\n  }\n  const salt = await bcrypt.genSalt(10);\n  const hashUid = await bcrypt.hash(payload.uid, salt);\n  const newUserId = uuidv4();\n  const data = await db.addUser(newUserId, payload.email, hashUid);\n  return data;\n}\n\nmodule.exports = {\n  register,\n};\n","const messagesService = require(\"./messages.service\");\nconst notesService = require(\"./notes.service\");\nconst updateService = require(\"./update.service\");\nconst infoService = require(\"./info.service\");\nconst registerService = require(\"./register.service\");\n\nmodule.exports = {\n  messagesService,\n  notesService,\n  updateService,\n  infoService,\n  registerService,\n};\n","const { messagesService } = require('../services');\n\nconst getMessageById = async (_, res) => {\n  const message = await messagesService.getMessageById('17502beb3b41933c');\n  res.json(message);\n};\n\nconst listMessages = async (_, res) => {\n  const messages = await messagesService.listMessages();\n  res.json(messages);\n};\n\nconst newMessageEvent = async (req, res) => {\n  await messagesService.newMessageEvent(req.body);\n  res.sendStatus(200);\n};\n\nmodule.exports = {\n  getMessageById,\n  listMessages,\n  newMessageEvent,\n};\n","const { notesService } = require(\"../services\");\n\nconst getDailyNotes = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const notes = await notesService.getNotes(req.query.id);\n  const notesWithTags = await notesService.getNotesWithTags(notes);\n  res.json(notesWithTags);\n};\n\nmodule.exports = {\n  getDailyNotes,\n};\n","const { infoService } = require(\"../services\");\n\nconst getInitInfo = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const info = await infoService.getInitInfo(req.query.id);\n  res.json(info);\n};\n\nmodule.exports = {\n  getInitInfo,\n};\n","const { registerService } = require(\"../services\");\n\nconst register = async (req, res) => {\n  // res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const token = await registerService.register(req.body);\n  if (token === \"Email is already taken\") {\n    res.status(400).send(\"Email is already taken\");\n  } else {\n    res.json(token);\n  }\n};\n\nmodule.exports = {\n  register,\n};\n","const messages = require(\"./messages.controller\");\nconst notes = require(\"./notes.controller\");\nconst info = require(\"./info.controller\");\nconst register = require(\"./register.controller\");\n\nmodule.exports = {\n  notes,\n  messages,\n  info,\n  register,\n};\n","/* eslint-disable object-curly-newline */\nconst express = require(\"express\");\n\nconst { messages, notes, info, register } = require(\"../controllers\");\n\nconst router = express.Router();\n\nrouter.get(\"/message\", messages.getMessageById);\n\nrouter.get(\"/allMessages\", messages.listMessages);\n\nrouter.get(\"/getDailyNotes\", notes.getDailyNotes);\n\nrouter.get(\"/getInitInfo\", info.getInitInfo);\n\nrouter.post(\"/post\", messages.newMessageEvent);\n\nrouter.post(\"/register\", register.register);\n\nmodule.exports = router;\n","require('dotenv').config();\nconst express = require('express');\n\nconst app = express();\nconst cors = require('cors');\nconst routes = require('./routes');\nconst { messagesService } = require('./services');\n// const { notesService } = require('./services');\nconst db = require('./db');\n\nconst init = async () => {\n  app.use(express.json());\n  app.use('/api', routes);\n  app.use(cors()); // TODO configure before deployment\n\n  await messagesService.init();\n  await db.init();\n  // console.log(await notesService.getNotes(1, 3));\n\n  const PORT = process.env.PORT || 3000;\n\n  app.get('*', (_, res) => {\n    res.send('hey');\n  });\n\n  app.listen(PORT, async () => {\n    console.log('Server has been started on port 3000...');\n    await messagesService.newMessageEvent();\n  });\n};\n\ninit();\n"]}
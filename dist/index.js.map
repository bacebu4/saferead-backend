{"version":3,"sources":["routes/verifyToken.js","utils/extract.util.js","utils/decode.util.js","utils/html.util.js","utils/email.util.js","utils/txt.util.js","utils/validate.util.js","utils/index.js","db/getNotes.js","db/getIdByEmail.js","db/getIdPasswordByEmail.js","db/markAsSeen.js","db/resetSeenFlag.js","db/addAuthor.js","db/addBook.js","db/addNotes.js","db/getTagNotes.js","db/getAmount.js","db/getAllTags.js","db/getAccountInfo.js","db/getLatestBooks.js","db/addUser.js","db/addExistingTag.js","db/addNewTag.js","db/deleteTagFromNote.js","db/searchNotes.js","db/deleteNote.js","db/updateTag.js","db/updateNote.js","db/updateComment.js","db/getCommentNotes.js","db/addComment.js","db/deleteComment.js","db/getNotesByBook.js","db/deleteTag.js","db/getNote.js","db/setReviewed.js","db/setNewDay.js","db/index.js","services/update.service.js","services/messages.service.js","services/notes.service.js","services/info.service.js","services/register.service.js","services/login.service.js","services/tags.service.js","services/comments.service.js","services/index.js","controllers/messages.controller.js","controllers/notes.controller.js","controllers/info.controller.js","controllers/register.controller.js","controllers/login.controller.js","controllers/tags.controller.js","controllers/comments.controller.js","controllers/index.js","routes/index.js","index.js"],"names":["jwt","require","module","exports","req","res","next","token","header","status","send","isVerified","verify","process","env","TOKEN_SECRET","user","error","extract","string","openTag","closeTag","slice","indexOf","length","trim","extractAndCut","resultArray","type","extracted","push","extractedNote","extractedComment","decode","base64","utfNumber","buff","Buffer","from","toString","extractNotes","html","openCommentTag","extractedNotes","extractTitle","extractAuthor","extractAll","data","encodedHtml","payload","parts","body","extractedAuthor","extractedTitle","findFromHeader","headers","name","value","extractEmail","deleteQuotes","extractTxtNotes","split","pop","forEach","note","i","notes","splittedNote","attachment","bodyText","attachmentText","validate","appleTagIndex","Math","max","attachmentId","mimeType","htmlUtils","emailUtils","decodeUtils","txtUtils","validateUtils","getNotes","id","raw","manager","query","getIdByEmail","email","includes","replace","user_id","getIdPasswordByEmail","markAsSeen","resetSeenFlag","v4","uuidv4","addAuthor","author","author_id","newGeneratedId","addBook","authorId","title","book_id","addNote","userId","bookId","newGeneratedNoteId","newGeneratedCommentId","addNotes","getTagNotes","getAmount","review_amount","getAllTags","getAccountInfo","getLatestBooks","addUser","password","addExistingTag","tag_id","note_id","addNewTag","tag_name","hue","deleteTagFromNote","searchNotes","substring","lowercaseSubstring","toLowerCase","deleteNote","updateTag","updateNote","note_text","updateComment","comment_id","comment_text","getCommentNotes","addComment","deleteComment","getNotesByBook","deleteTag","getNote","setReviewed","setNewDay","createConnection","schedule","startSchedule","scheduleJob","console","log","init","connection","DATABASE_URL","url","host","port","DB_PORT","username","database","db","messageService","start","extractedEmail","deleteMessageById","google","fs","path","updateService","CLIENT","TOKEN_PATH","join","__dirname","startWatch","auth","gmail","version","setTimeout","users","watch","resource","topicName","authorize","credentials","client_secret","client_id","redirect_uris","installed","oAuth2Client","OAuth2","readFile","err","parsedToken","JSON","parse","setCredentials","pathToCredentials","content","getMessageById","messages","get","attachments","messageId","trash","listMessages","list","map","m","newMessageEvent","getMessageQueue","updatingQueue","deletingQueue","Promise","all","d","getRandomNotes","amount","markAsSeenQueue","usedIndexes","Set","repeatedIndex","newRandomIndex","floor","random","has","add","newData","randomNotes","getNotesWithTags","noteWithTags","tagQueue","tags","t","deleted","getNotesWithComments","noteWithComments","comments","Error","getInitInfo","allAccountInfo","createdat","accountInfo","latestBooks","bcrypt","register","findResults","salt","genSalt","hashPassword","hash","newUserId","sign","login","isValid","compare","messagesService","notesService","infoService","registerService","loginService","tagsService","commentsService","_","message","json","sendStatus","getDailyNotes","set","notesWithTags","notesWithComments","params","info","express","router","Router","post","delete","put","config","app","cors","routes","use","PORT","listen"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["/* eslint-disable func-names */\nconst jwt = require(\"jsonwebtoken\");\n\nmodule.exports = function (req, res, next) {\n  const token = req.header(\"auth-token\");\n  if (!token) {\n    return res.status(401).send(\"Access denied\");\n  }\n  try {\n    const isVerified = jwt.verify(token, process.env.TOKEN_SECRET);\n    req.user = isVerified;\n    next();\n  } catch (error) {\n    res.status(400).send(\"Not valid\");\n  }\n};\n","const extract = (string, openTag, closeTag) => string.slice(string.indexOf(openTag) + openTag.length, string.indexOf(closeTag)).trim();\n\nconst extractAndCut = (string, openTag, closeTag, resultArray, type) => {\n  string = string.slice(string.indexOf(openTag) + openTag.length + 1);\n  let extracted = string.slice(0, string.indexOf(closeTag));\n  string = string.slice(extracted.length);\n  extracted = extracted.trim();\n\n  if (type === 'note' && extracted) {\n    resultArray.push({\n      extractedNote: extracted,\n    });\n  } else if (type === 'comment' && extracted) {\n    resultArray[resultArray.length - 1].extractedComment = extracted;\n  }\n  return string;\n};\n\nmodule.exports = {\n  extract,\n  extractAndCut,\n};\n","const decode = (base64, utfNumber) => {\n  const buff = Buffer.from(base64, 'base64');\n  return buff.toString(utfNumber);\n};\n\nmodule.exports = {\n  decode,\n};\n","const { extract, extractAndCut } = require('./extract.util');\nconst { decode } = require('./decode.util');\n\n/* eslint-disable no-useless-escape */\nconst extractNotes = (html) => {\n  const openTag = '<p class=\\\"annotationrepresentativetext\\\">\\r\\n';\n  const closeTag = '</p>\\r\\n';\n  const openCommentTag = '<p class=\\\"annotationnote\\\">\\r\\n';\n  const extractedNotes = [];\n  while (html.indexOf(openTag) !== -1) {\n    html = extractAndCut(html, openTag, closeTag, extractedNotes, 'note');\n    html = extractAndCut(html, openCommentTag, closeTag, extractedNotes, 'comment');\n  }\n  return extractedNotes;\n};\n\nconst extractTitle = (html) => {\n  const openTag = '<h1 class=\\\"booktitle\\\" style=\\\"margin-top:-5px;\\\" width=\\\"80%\\\">';\n  const closeTag = '</h1>';\n  return extract(html, openTag, closeTag);\n};\n\nconst extractAuthor = (html) => {\n  const openTag = '<h2 style=\\\"margin-top:-20px; font-family:Helvetica Neue, Arial, Sans-Serif;font-weight:normal;font-size:23px;color:rgb(26,26,26);line-height:26px; word-break: break-word; text-align:center; margin-bottom:46px;\\\">';\n  const closeTag = '</h2>';\n  return extract(html, openTag, closeTag);\n};\n\nconst extractAll = (data) => {\n  const encodedHtml = data.data.payload.parts[1].body.data;\n  const html = decode(encodedHtml, 'utf-8');\n\n  return {\n    extractedAuthor: extractAuthor(html),\n    extractedTitle: extractTitle(html),\n    extractedNotes: extractNotes(html),\n  };\n};\n\nmodule.exports = {\n  extractAll,\n};\n","const { extract } = require('./extract.util');\n\nconst findFromHeader = (data) => {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const header of data.data.payload.headers) {\n    if (header.name === 'From') {\n      return header.value;\n    }\n  }\n};\n\nconst extractEmail = (data) => {\n  const value = findFromHeader(data);\n  return extract(value, '<', '>');\n};\n\nmodule.exports = {\n  extractEmail,\n};\n","const { extract } = require('./extract.util');\nconst { decode } = require('./decode.util');\n\nconst deleteQuotes = (string) => {\n  string = string.slice(1, string.length - 1);\n  return string;\n};\n\nconst extractTxtNotes = (string) => {\n  const extractedNotes = string.split('\\n\\n\\n');\n  extractedNotes.pop();\n\n  extractedNotes.forEach((note, i, notes) => {\n    const splittedNote = note.split('\\n\\n');\n    if (splittedNote.length === 2) {\n      notes[i] = {\n        extractedNote: deleteQuotes(splittedNote[0].trim()),\n        extractedComment: splittedNote[1],\n      };\n    } else {\n      notes[i] = {\n        extractedNote: deleteQuotes(note.trim()),\n      };\n    }\n  });\n  return extractedNotes;\n};\n\nconst extractAll = (data, attachment) => {\n  const bodyText = decode(data.data.payload.parts[0].body.data, 'utf-8');\n  const attachmentText = decode(attachment.data.data, 'utf16le');\n\n  const extractedNotes = extractTxtNotes(attachmentText);\n\n  const extractedTitle = bodyText.slice(0, bodyText.indexOf('\\r\\n'));\n\n  const extractedAuthor = extract(bodyText, '\\r\\n', '\\r\\n\\r\\n');\n  return {\n    extractedAuthor,\n    extractedTitle,\n    extractedNotes,\n  };\n};\n\nmodule.exports = {\n  extractAll,\n};\n","const { decode } = require('./decode.util');\n\nconst validate = (data) => {\n  let encodedHtml;\n  if (data.data.payload.parts?.length > 1) {\n    encodedHtml = data.data.payload.parts[1].body.data;\n  }\n  if (encodedHtml) {\n    const html = decode(encodedHtml, 'utf-8');\n    const appleTagIndex = Math.max(html.indexOf('Apple Books. <br>'), html.indexOf('Книги. <br>'));\n    if (appleTagIndex !== -1) {\n      return 'ibooks';\n    }\n  } else {\n    let attachmentId;\n    let mimeType;\n    if (data.data.payload.parts?.length > 1) {\n      attachmentId = data.data.payload.parts[1].body?.attachmentId;\n      mimeType = data.data.payload.parts[1].mimeType;\n    }\n\n    if (attachmentId && mimeType === 'text/plain') {\n      return 'litres';\n    }\n  }\n  return 'empty';\n};\n\nmodule.exports = {\n  validate,\n};\n","const htmlUtils = require('./html.util');\nconst emailUtils = require('./email.util');\nconst decodeUtils = require('./decode.util');\nconst txtUtils = require('./txt.util');\nconst validateUtils = require('./validate.util');\n\nmodule.exports = {\n  htmlUtils,\n  emailUtils,\n  decodeUtils,\n  txtUtils,\n  validateUtils,\n};\n","import { manager } from \"./index\";\n\nconst getNotes = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select note_text, book_title, author_full_name, n.note_id\n    from users\n        join notes n on users.user_id = n.user_id\n        join books b on n.book_id = b.book_id\n        join authors a on b.author_id = a.author_id\n    where users.user_id = $1 and seen = false;\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getNotes,\n};\n","import { manager } from \"./index\";\n\nconst getIdByEmail = async (email) => {\n  if (email.includes(\"@me.com\")) {\n    email = email.replace(\"@me.com\", \"@icloud.com\");\n  }\n  const data = await manager.query(\n    /* sql */ `\n    select user_id\n    from users\n    where email = $1;\n  `,\n    [email],\n  );\n\n  if (data.length) {\n    return data[0].user_id;\n  }\n  return \"\";\n};\n\nmodule.exports = {\n  getIdByEmail,\n};\n","import { manager } from \"./index\";\n\nconst getIdPasswordByEmail = async (email) => {\n  if (email.includes(\"@me.com\")) {\n    email = email.replace(\"@me.com\", \"@icloud.com\");\n  }\n  const data = await manager.query(\n    /* sql */ `\n    select user_id, password\n    from users\n    where email = $1;\n  `,\n    [email],\n  );\n\n  if (data.length) {\n    return data[0];\n  }\n  return \"\";\n};\n\nmodule.exports = {\n  getIdPasswordByEmail,\n};\n","import { manager } from './index';\n\nconst markAsSeen = async (id) => {\n  await manager.query(/* sql */`\n    update notes\n    set seen = true\n    where note_id = $1;\n  `, [id]);\n};\n\nmodule.exports = {\n  markAsSeen,\n};\n","import { manager } from './index';\n\nconst resetSeenFlag = async (id) => {\n  await manager.query(/* sql */`\n    update notes\n    set seen = false\n    where user_id = $1;\n  `, [id]);\n};\n\nmodule.exports = {\n  resetSeenFlag,\n};\n","import { manager } from './index';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst addAuthor = async (author) => {\n  const data = await manager.query(/* sql */`\n    select author_id\n    from authors\n    where author_full_name = $1;\n  `, [author]);\n\n  if (data.length) {\n    return data[0].author_id;\n  }\n\n  const newGeneratedId = uuidv4();\n\n  await manager.query(/* sql */`\n    insert into authors(author_id, author_full_name) values ($1, $2);\n  `, [newGeneratedId, author]);\n\n  return newGeneratedId;\n};\n\nmodule.exports = {\n  addAuthor,\n};\n","import { manager } from './index';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst addBook = async (authorId, title) => {\n  const data = await manager.query(/* sql */`\n    select book_id\n    from books\n    where book_title = $1;\n  `, [title]);\n\n  if (data.length) {\n    return data[0].book_id;\n  }\n\n  const newGeneratedId = uuidv4();\n\n  await manager.query(/* sql */`\n    insert into books(book_id, author_id, book_title) VALUES ($1, $2, $3);\n  `, [newGeneratedId, authorId, title]);\n\n  return newGeneratedId;\n};\n\nmodule.exports = {\n  addBook,\n};\n","import { manager } from './index';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst addNote = async (userId, bookId, note) => {\n  const newGeneratedNoteId = uuidv4();\n  await manager.query(/* sql */`\n    insert into notes(user_id, book_id, createdAt, updatedAt, note_text, seen, note_id)\n    VALUES ($1, $2, now(), now(), $3, false, $4);\n  `, [userId, bookId, note.extractedNote, newGeneratedNoteId]);\n\n  if (note?.extractedComment) {\n    const newGeneratedCommentId = uuidv4();\n    await manager.query(/* sql */`\n      insert into comments(note_id, comment_text, createdAt, updatedAt, comment_id) VALUES ($1, $2, now(), now(), $3);\n  `, [newGeneratedNoteId, note.extractedComment, newGeneratedCommentId]);\n  }\n};\n\nconst addNotes = async (userId, bookId, notes) => {\n  // TODO delete restricted syntax\n  // eslint-disable-next-line no-restricted-syntax\n  for (const note of notes) {\n    await addNote(userId, bookId, note);\n  }\n};\n\nmodule.exports = {\n  addNotes,\n};\n","import { manager } from \"./index\";\n\nconst getTagNotes = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select *\n    from notes_tags\n    join tags t on notes_tags.tag_id = t.tag_id\n    where note_id = $1;\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getTagNotes,\n};\n","import { manager } from \"./index\";\n\nconst getAmount = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select review_amount\n    from users\n    where users.user_id = $1\n  `,\n    [id],\n  );\n  return raw[0].review_amount;\n};\n\nmodule.exports = {\n  getAmount,\n};\n","import { manager } from \"./index\";\n\nconst getAllTags = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select tag_id, tag_name, hue\n    from tags\n    where user_id = $1\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getAllTags,\n};\n","import { manager } from \"./index\";\n\nconst getAccountInfo = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select *\n    from users\n    where user_id = $1\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getAccountInfo,\n};\n","import { manager } from \"./index\";\n\nconst getLatestBooks = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select distinct book_title, author_full_name, book_id from (\n      select distinct book_title, author_full_name, createdAt, b.book_id from notes\n          join books b on notes.book_id = b.book_id\n          join authors a on a.author_id = b.author_id\n          where user_id = $1\n          order by createdAt desc\n      ) as t\n    limit 10\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getLatestBooks,\n};\n","import { manager } from \"./index\";\n\nconst addUser = async (id, email, password) => {\n  const data = await manager.query(\n    /* sql */ `\n    insert into \n    users(user_id, review_amount, streak, missed, current, reviewed, createdAt, email, password) \n    VALUES ($1, 3, 0, 0, 0, false, now(), $2, $3)\n  `,\n    [id, email, password],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  addUser,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst addExistingTag = async (tag_id, note_id) => {\n  const data = await manager.query(\n    /* sql */ `\n    insert into notes_tags(tag_id, note_id) \n    VALUES ($1, $2);\n  `,\n    [tag_id, note_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  addExistingTag,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst addNewTag = async (user_id, payload) => {\n  const data = await manager.query(\n    /* sql */ `\n    insert into tags(tag_id, tag_name, hue, user_id) \n    VALUES ($1, $2, $3, $4)\n  `,\n    [payload.tag_id, payload.tag_name, payload.hue, user_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  addNewTag,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst deleteTagFromNote = async (note_id, tag_id) => {\n  const data = await manager.query(\n    /* sql */ `\n    delete from notes_tags\n    where note_id = $1 and tag_id = $2;\n  `,\n    [note_id, tag_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  deleteTagFromNote,\n};\n","import { manager } from \"./index\";\n\nconst searchNotes = async (id, substring) => {\n  const lowercaseSubstring = substring.toLowerCase();\n  const raw = await manager.query(\n    /* sql */ `\n    select note_text, comment_text, book_title, author_full_name, n.note_id\n    from users\n      join notes n on users.user_id = n.user_id\n      join books b on n.book_id = b.book_id\n      join authors a on b.author_id = a.author_id\n      left join comments c on n.note_id = c.note_id\n    where users.user_id = $1\n      and (note_text like $2 or note_text like $3)\n  `,\n    [id, `% ${substring}%`, `% ${lowercaseSubstring}%`],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  searchNotes,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst deleteNote = async (note_id) => {\n  const data = await manager.query(\n    /* sql */ `\n    delete from notes\n    where note_id = $1;\n  `,\n    [note_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  deleteNote,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst updateTag = async (tag_name, tag_id, hue) => {\n  const data = await manager.query(\n    /* sql */ `\n    update tags\n    set tag_name = $1, hue = $2\n    where tag_id = $3;\n  `,\n    [tag_name, hue, tag_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  updateTag,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst updateNote = async (note_id, note_text) => {\n  const data = await manager.query(\n    /* sql */ `\n    update notes\n    set note_text = $1\n    where note_id = $2;\n  `,\n    [note_text, note_id],\n  );\n  return data;\n};\n\nmodule.exports = {\n  updateNote,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst updateComment = async (comment_id, comment_text) => {\n  const data = await manager.query(\n    /* sql */ `\n    update comments\n    set comment_text = $1\n    where comment_id = $2;\n  `,\n    [comment_text, comment_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  updateComment,\n};\n","import { manager } from \"./index\";\n\nconst getCommentNotes = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select *\n    from comments\n    where note_id = $1;\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getCommentNotes,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst addComment = async (note_id, comment_id, comment_text) => {\n  await manager.query(\n    /* sql */ `\n    insert into comments(note_id, comment_text, createdAt, updatedAt, comment_id) \n    VALUES ($1, $2, now(), now(), $3);\n  `,\n    [note_id, comment_text, comment_id],\n  );\n};\n\nmodule.exports = {\n  addComment,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst deleteComment = async (comment_id) => {\n  const data = await manager.query(\n    /* sql */ `\n    delete from comments\n    where comment_id = $1;\n  `,\n    [comment_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  deleteComment,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst getNotesByBook = async (id, book_id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select note_text, book_title, author_full_name, n.note_id\n    from users\n        join notes n on users.user_id = n.user_id\n        join books b on n.book_id = b.book_id\n        join authors a on b.author_id = a.author_id\n    where users.user_id = $1 and b.book_id = $2;\n  `,\n    [id, book_id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getNotesByBook,\n};\n","/* eslint-disable camelcase */\nimport { manager } from \"./index\";\n\nconst deleteTag = async (tag_id) => {\n  const data = await manager.query(\n    /* sql */ `\n    delete from tags\n    where tag_id = $1;\n  `,\n    [tag_id],\n  );\n\n  return data;\n};\n\nmodule.exports = {\n  deleteTag,\n};\n","import { manager } from \"./index\";\n\nconst getNote = async (id) => {\n  const raw = await manager.query(\n    /* sql */ `\n    select note_text, book_title, author_full_name, n.note_id\n    from users\n        join notes n on users.user_id = n.user_id\n        join books b on n.book_id = b.book_id\n        join authors a on b.author_id = a.author_id\n    where n.note_id = $1;\n  `,\n    [id],\n  );\n  return raw;\n};\n\nmodule.exports = {\n  getNote,\n};\n","import { manager } from \"./index\";\n\nconst setReviewed = async (id) => {\n  await manager.query(\n    /* sql */ `\n  update users\n    set reviewed = true, \n        streak = streak + 1, \n        missed = 0\n    where user_id = $1;\n  `,\n    [id],\n  );\n};\n\nmodule.exports = {\n  setReviewed,\n};\n","import { manager } from \"./index\";\n\nconst setNewDay = async () => {\n  await manager.query(/* sql */ `\n    update users\n    set streak = 0,\n        missed = missed + 1\n    where reviewed = false;\n  `);\n  await manager.query(/* sql */ `\n    update users\n    set reviewed = true\n    where reviewed = false;\n  `);\n};\n\nmodule.exports = {\n  setNewDay,\n};\n","const { createConnection } = require(\"typeorm\");\nconst schedule = require(\"node-schedule\");\nrequire(\"reflect-metadata\");\nconst { getNotes } = require(\"./getNotes\");\nconst { getIdByEmail } = require(\"./getIdByEmail\");\nconst { getIdPasswordByEmail } = require(\"./getIdPasswordByEmail\");\nconst { markAsSeen } = require(\"./markAsSeen\");\nconst { resetSeenFlag } = require(\"./resetSeenFlag\");\nconst { addAuthor } = require(\"./addAuthor\");\nconst { addBook } = require(\"./addBook\");\nconst { addNotes } = require(\"./addNotes\");\nconst { getTagNotes } = require(\"./getTagNotes\");\nconst { getAmount } = require(\"./getAmount\");\nconst { getAllTags } = require(\"./getAllTags\");\nconst { getAccountInfo } = require(\"./getAccountInfo\");\nconst { getLatestBooks } = require(\"./getLatestBooks\");\nconst { addUser } = require(\"./addUser\");\nconst { addExistingTag } = require(\"./addExistingTag\");\nconst { addNewTag } = require(\"./addNewTag\");\nconst { deleteTagFromNote } = require(\"./deleteTagFromNote\");\nconst { searchNotes } = require(\"./searchNotes\");\nconst { deleteNote } = require(\"./deleteNote\");\nconst { updateTag } = require(\"./updateTag\");\nconst { updateNote } = require(\"./updateNote\");\nconst { updateComment } = require(\"./updateComment\");\nconst { getCommentNotes } = require(\"./getCommentNotes\");\nconst { addComment } = require(\"./addComment\");\nconst { deleteComment } = require(\"./deleteComment\");\nconst { getNotesByBook } = require(\"./getNotesByBook\");\nconst { deleteTag } = require(\"./deleteTag\");\nconst { getNote } = require(\"./getNote\");\nconst { setReviewed } = require(\"./setReviewed\");\nconst { setNewDay } = require(\"./setNewDay\");\n\n// eslint-disable-next-line import/no-mutable-exports\nlet manager;\n\nconst startSchedule = () => {\n  schedule.scheduleJob(\"0 0 * * *\", () => {\n    console.log(\"this is schedule every day\");\n    setNewDay();\n  });\n};\n\nconst init = async () => {\n  try {\n    let connection;\n    if (process.env.DATABASE_URL) {\n      connection = await createConnection({\n        type: \"postgres\",\n        url: process.env.DATABASE_URL,\n      });\n      console.log(\"Connected to DB @ heroku\");\n    } else {\n      connection = await createConnection({\n        type: \"postgres\",\n        host: \"localhost\",\n        port: process.env.DB_PORT,\n        username: \"postgres\",\n        password: \"123\",\n        database: \"postgres\",\n        // logging: true,\n      });\n      console.log(\"Connected to DB locally\");\n    }\n    manager = connection.manager;\n    startSchedule();\n  } catch (error) {\n    console.error(\"Unable to connect to the database:\", error);\n  }\n};\n\nmodule.exports = {\n  init,\n  getNotes,\n  markAsSeen,\n  resetSeenFlag,\n  addAuthor,\n  addBook,\n  addNotes,\n  getIdByEmail,\n  getTagNotes,\n  getAmount,\n  getAllTags,\n  getAccountInfo,\n  getLatestBooks,\n  addUser,\n  getIdPasswordByEmail,\n  addExistingTag,\n  addNewTag,\n  deleteTagFromNote,\n  searchNotes,\n  deleteNote,\n  updateTag,\n  updateNote,\n  updateComment,\n  getCommentNotes,\n  addComment,\n  deleteComment,\n  getNotesByBook,\n  deleteTag,\n  getNote,\n  setReviewed,\n  setNewDay,\n};\n\nexport {\n  // eslint-disable-next-line import/prefer-default-export\n  manager,\n};\n","const db = require('../db');\nconst messageService = require('./messages.service');\n\nasync function start(data, id) {\n  try {\n    const authorId = await db.addAuthor(data.extractedAuthor);\n    console.log('authorId: ', authorId);\n\n    const bookId = await db.addBook(authorId, data.extractedTitle);\n    console.log('bookId: ', bookId);\n\n    const userId = await db.getIdByEmail(data.extractedEmail);\n    if (userId) {\n      await db.addNotes(userId, bookId, data.extractedNotes);\n    } else {\n      console.log('User was not found');\n    }\n  } catch (error) {\n    console.log('Error during adding note to db. The message will be deleted');\n    console.log(error);\n    messageService.deleteMessageById(id);\n  }\n}\n\nmodule.exports = {\n  start,\n};\n","const { google } = require('googleapis');\nconst fs = require('fs');\nconst path = require('path');\nconst { htmlUtils } = require('../utils');\nconst { emailUtils } = require('../utils');\nconst { txtUtils } = require('../utils');\nconst { validateUtils } = require('../utils');\nconst updateService = require('./update.service');\n\nlet CLIENT;\nconst TOKEN_PATH = path.join(__dirname, 'token.json');\n\nfunction startWatch(auth) {\n  const gmail = google.gmail({ version: 'v1', auth });\n  console.log('New watching started: once in 7 days');\n  setTimeout(() => {\n    startWatch(CLIENT);\n  }, 1000 * 60 * 60 * 24 * 6);\n  return gmail.users.watch({\n    userId: 'me',\n    resource: {\n      topicName: 'projects/safe-read/topics/new',\n    },\n  });\n}\n\nfunction authorize(credentials) {\n  // eslint-disable-next-line camelcase\n  const { client_secret, client_id, redirect_uris } = credentials.installed;\n  const oAuth2Client = new google.auth.OAuth2(\n    client_id, client_secret, redirect_uris[0],\n  );\n\n  fs.readFile(TOKEN_PATH, async (err, token) => {\n    const parsedToken = JSON.parse(token);\n    oAuth2Client.setCredentials(parsedToken);\n    CLIENT = oAuth2Client;\n    await startWatch(CLIENT);\n  });\n}\n\nconst init = () => {\n  const pathToCredentials = path.join(__dirname, 'credentials.json');\n  fs.readFile(pathToCredentials, (err, content) => {\n    if (err) return console.log('Error loading client secret file:', pathToCredentials);\n    authorize(JSON.parse(content));\n  });\n};\n\nconst getMessageById = async (id) => {\n  const auth = CLIENT;\n  const gmail = google.gmail({ version: 'v1', auth });\n  const data = await gmail.users.messages.get({\n    userId: 'me',\n    id,\n  });\n\n  const extractedEmail = emailUtils.extractEmail(data);\n\n  const validate = validateUtils.validate(data);\n\n  if (validate === 'ibooks') {\n    return {\n      extractedEmail,\n      ...htmlUtils.extractAll(data),\n    };\n  } if (validate === 'litres') {\n    const attachmentId = data.data.payload.parts[1].body?.attachmentId;\n    const attachment = await gmail.users.messages.attachments.get({\n      userId: 'me',\n      messageId: id,\n      id: attachmentId,\n    });\n\n    return {\n      extractedEmail,\n      ...txtUtils.extractAll(data, attachment),\n    };\n  }\n  return validate;\n};\n\nconst deleteMessageById = async (id) => {\n  const auth = CLIENT;\n  const gmail = google.gmail({ version: 'v1', auth });\n  await gmail.users.messages.trash({\n    userId: 'me',\n    id,\n  });\n};\n\nconst listMessages = async () => {\n  const auth = CLIENT;\n  const gmail = google.gmail({ version: 'v1', auth });\n  const data = await gmail.users.messages.list({\n    userId: 'me',\n  });\n  if (data.data?.messages) {\n    return data.data.messages.map((m) => m.id);\n  }\n  console.log('No new messages');\n  return [];\n};\n\nconst newMessageEvent = async () => {\n  try {\n    console.log('Checking inbox');\n    const messages = await listMessages();\n    if (messages.length) {\n      const getMessageQueue = [];\n      const updatingQueue = [];\n      const deletingQueue = [];\n\n      messages.forEach((m) => {\n        getMessageQueue.push(getMessageById(m));\n      });\n      const data = await Promise.all(getMessageQueue);\n      data.forEach((d) => {\n        if (d !== 'empty') {\n          updatingQueue.push(updateService.start(d));\n        } else {\n          console.log('empty');\n        }\n      });\n      await Promise.all(updatingQueue);\n\n      messages.forEach((m) => {\n        deletingQueue.push(deleteMessageById(m));\n      });\n\n      await Promise.all(deletingQueue);\n    }\n  } catch (error) {\n    console.log('Error occurred', error);\n  } finally {\n    console.log('Event ended');\n  }\n};\n\nmodule.exports = {\n  getMessageById,\n  listMessages,\n  newMessageEvent,\n  init,\n  deleteMessageById,\n};\n","/* eslint-disable camelcase */\nconst db = require(\"../db\");\n\nasync function getRandomNotes(data, amount) {\n  const markAsSeenQueue = [];\n\n  // fallback when amount of notes less than needed amount\n  if (data.length <= amount) {\n    for (let i = 0; i < data.length; i += 1) {\n      markAsSeenQueue.push(db.markAsSeen(data[i].note_id));\n    }\n    await Promise.all(markAsSeenQueue);\n    return data;\n  }\n\n  const usedIndexes = new Set();\n\n  for (let i = 0; i < amount; i += 1) {\n    let repeatedIndex = true;\n    let newRandomIndex;\n    while (repeatedIndex) {\n      newRandomIndex = Math.floor(Math.random() * data.length);\n      if (!usedIndexes.has(newRandomIndex)) {\n        repeatedIndex = false;\n        usedIndexes.add(newRandomIndex);\n        markAsSeenQueue.push(db.markAsSeen(data[newRandomIndex].note_id));\n      }\n    }\n  }\n\n  await Promise.all(markAsSeenQueue);\n\n  const newData = [];\n\n  usedIndexes.forEach((i) => {\n    newData.push(data[i]);\n  });\n\n  return newData;\n}\n\nasync function getNotes(id) {\n  const amount = await db.getAmount(id);\n  let data = await db.getNotes(id);\n  if (data.length < amount) {\n    await db.resetSeenFlag(id);\n    data = await db.getNotes(id);\n  }\n\n  const randomNotes = await getRandomNotes(data, amount);\n  return randomNotes;\n}\n\nasync function getNotesWithTags(notes) {\n  const noteWithTags = [...notes];\n  const tagQueue = [];\n  notes.forEach((note) => {\n    tagQueue.push(db.getTagNotes(note.note_id));\n  });\n  const tags = await Promise.all(tagQueue);\n  tags.forEach((t, i) => {\n    noteWithTags[i].tags = t;\n    noteWithTags[i].deleted = false;\n  });\n  return noteWithTags;\n}\n\nasync function getNotesWithComments(notes) {\n  const noteWithComments = [...notes];\n  const tagQueue = [];\n  notes.forEach((note) => {\n    tagQueue.push(db.getCommentNotes(note.note_id));\n  });\n  const tags = await Promise.all(tagQueue);\n  tags.forEach((t, i) => {\n    noteWithComments[i].comments = t;\n  });\n  return noteWithComments;\n}\n\nasync function searchNotes(id, substring) {\n  try {\n    const notes = await db.searchNotes(id, substring);\n    // const notesSecond = await db.searchNotes(id, substring.toLowerCase());\n\n    return notes;\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nasync function deleteNote(id) {\n  try {\n    await db.deleteNote(id);\n  } catch (error) {\n    throw new Error(\"Error deleting note\");\n  }\n}\n\nasync function updateNote(note_id, note_text) {\n  try {\n    await db.updateNote(note_id, note_text);\n  } catch (error) {\n    throw new Error(\"Error updating note\");\n  }\n}\n\nasync function getNotesByBook(user_id, book_id) {\n  try {\n    const notes = await db.getNotesByBook(user_id, book_id);\n    return notes;\n  } catch (error) {\n    throw new Error(\"Error getting notes\");\n  }\n}\n\nasync function getNote(note_id) {\n  try {\n    const note = await db.getNote(note_id);\n    return note;\n  } catch (error) {\n    throw new Error(\"Error getting note\");\n  }\n}\n\nmodule.exports = {\n  getNotes,\n  getNotesWithTags,\n  searchNotes,\n  deleteNote,\n  updateNote,\n  getNotesWithComments,\n  getNotesByBook,\n  getNote,\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\nconst db = require(\"../db\");\n\nasync function getInitInfo(id) {\n  const tags = await db.getAllTags(id);\n  const allAccountInfo = await db.getAccountInfo(id);\n  const { user_id, createdat, email, ...accountInfo } = allAccountInfo[0];\n  const latestBooks = await db.getLatestBooks(id);\n  return { tags, accountInfo, latestBooks };\n}\n\nasync function setReviewed(id) {\n  try {\n    await db.setReviewed(id);\n  } catch (error) {\n    throw new Error(\"Error setting\");\n  }\n}\n\nmodule.exports = {\n  getInitInfo,\n  setReviewed,\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\nconst bcrypt = require(\"bcryptjs\");\nconst { v4: uuidv4 } = require(\"uuid\");\nconst jwt = require(\"jsonwebtoken\");\nconst db = require(\"../db\");\n\nasync function register(payload) {\n  try {\n    const findResults = await db.getIdByEmail(payload.email);\n    if (findResults !== \"\") {\n      throw new Error(\"Not valid\");\n    }\n    const salt = await bcrypt.genSalt(10);\n    const hashPassword = await bcrypt.hash(payload.password, salt);\n    const newUserId = uuidv4();\n    await db.addUser(newUserId, payload.email, hashPassword);\n    const token = jwt.sign({ id: newUserId }, process.env.TOKEN_SECRET);\n    return token;\n  } catch (error) {\n    return \"Not valid\";\n  }\n}\n\nmodule.exports = {\n  register,\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nconst db = require(\"../db\");\n\nasync function login(payload) {\n  try {\n    const findResults = await db.getIdPasswordByEmail(payload.email);\n    if (findResults === \"\") {\n      throw new Error(\"not valid\");\n    }\n    const isValid = await bcrypt.compare(\n      payload.password,\n      findResults.password,\n    );\n    if (!isValid) {\n      throw new Error(\"not valid\");\n    }\n    const token = jwt.sign(\n      { id: findResults.user_id },\n      process.env.TOKEN_SECRET,\n    );\n    return token;\n  } catch (error) {\n    return \"Not valid\";\n  }\n}\n\nmodule.exports = {\n  login,\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\nconst db = require(\"../db\");\n\nasync function addExistingTag(payload) {\n  try {\n    await db.addExistingTag(payload.tag_id, payload.note_id);\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nasync function addNewTag(userId, payload) {\n  try {\n    await db.addNewTag(userId, payload);\n    await db.addExistingTag(payload.tag_id, payload.note_id);\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nasync function deleteTagFromNote(note_id, tag_id) {\n  try {\n    await db.deleteTagFromNote(note_id, tag_id);\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nasync function deleteTag(tag_id) {\n  try {\n    await db.deleteTag(tag_id);\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nasync function updateTag(tag_id, tag_name, hue) {\n  try {\n    await db.updateTag(tag_name, tag_id, hue);\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nmodule.exports = {\n  deleteTagFromNote,\n  addNewTag,\n  addExistingTag,\n  updateTag,\n  deleteTag,\n};\n","/* eslint-disable camelcase */\nconst db = require(\"../db\");\n\nasync function updateComment(comment_id, comment_text) {\n  try {\n    await db.updateComment(comment_id, comment_text);\n  } catch (error) {\n    throw new Error(\"Error updating comment\");\n  }\n}\n\nasync function addComment(note_id, comment_id, comment_text) {\n  try {\n    await db.addComment(note_id, comment_id, comment_text);\n  } catch (error) {\n    throw new Error(\"Error adding comment\");\n  }\n}\n\nasync function deleteComment(comment_id) {\n  try {\n    await db.deleteComment(comment_id);\n  } catch (error) {\n    throw new Error(\"Error deleting comment\");\n  }\n}\n\nmodule.exports = {\n  addComment,\n  updateComment,\n  deleteComment,\n};\n","const messagesService = require(\"./messages.service\");\nconst notesService = require(\"./notes.service\");\nconst updateService = require(\"./update.service\");\nconst infoService = require(\"./info.service\");\nconst registerService = require(\"./register.service\");\nconst loginService = require(\"./login.service\");\nconst tagsService = require(\"./tags.service\");\nconst commentsService = require(\"./comments.service\");\n\nmodule.exports = {\n  messagesService,\n  notesService,\n  updateService,\n  infoService,\n  tagsService,\n  loginService,\n  registerService,\n  commentsService,\n};\n","const { messagesService } = require('../services');\n\nconst getMessageById = async (_, res) => {\n  const message = await messagesService.getMessageById('17502beb3b41933c');\n  res.json(message);\n};\n\nconst listMessages = async (_, res) => {\n  const messages = await messagesService.listMessages();\n  res.json(messages);\n};\n\nconst newMessageEvent = async (req, res) => {\n  await messagesService.newMessageEvent(req.body);\n  res.sendStatus(200);\n};\n\nmodule.exports = {\n  getMessageById,\n  listMessages,\n  newMessageEvent,\n};\n","const { notesService } = require(\"../services\");\n\nconst getDailyNotes = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const notes = await notesService.getNotes(req.user.id);\n  const notesWithTags = await notesService.getNotesWithTags(notes);\n  const notesWithComments = await notesService.getNotesWithComments(\n    notesWithTags,\n  );\n  res.json(notesWithComments);\n};\n\nconst getNote = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const notes = await notesService.getNote(req.params.id);\n  const notesWithTags = await notesService.getNotesWithTags(notes);\n  const notesWithComments = await notesService.getNotesWithComments(\n    notesWithTags,\n  );\n  res.json(notesWithComments[0]);\n};\n\nconst getNotesByBook = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const notes = await notesService.getNotesByBook(\n    req.user.id,\n    req.body.book_id,\n  );\n  res.json(notes);\n};\n\nconst searchNotes = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    const notes = await notesService.searchNotes(\n      req.user.id,\n      req.body.substring,\n    );\n    res.json(notes);\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nconst deleteNote = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await notesService.deleteNote(req.body.id);\n    res.status(204).send(\"Successfully deleted\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nconst updateNote = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await notesService.updateNote(req.body.note_id, req.body.note_text);\n    res.status(204).send(\"Successfully updated\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nmodule.exports = {\n  getDailyNotes,\n  searchNotes,\n  deleteNote,\n  updateNote,\n  getNotesByBook,\n  getNote,\n};\n","const { infoService } = require(\"../services\");\n\nconst getInitInfo = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const info = await infoService.getInitInfo(req.user.id);\n  res.json(info);\n};\n\nconst setReviewed = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await infoService.setReviewed(req.user.id);\n    res.status(204).send(\"Successfully set\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nmodule.exports = {\n  getInitInfo,\n  setReviewed,\n};\n","const { registerService } = require(\"../services\");\n\nconst register = async (req, res) => {\n  // res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const token = await registerService.register(req.body);\n  if (token === \"Not valid\") {\n    res.status(400).send(\"Not valid\");\n  } else {\n    res.json(token);\n  }\n};\n\nmodule.exports = {\n  register,\n};\n","/* eslint-disable operator-linebreak */\nconst { loginService } = require(\"../services\");\n\nconst login = async (req, res) => {\n  // res.set(\"Access-Control-Allow-Origin\", \"*\");\n  const token = await loginService.login(req.body);\n  if (token === \"Not valid\") {\n    res.status(400).send(\"Not valid\");\n  } else {\n    res.json(token);\n  }\n};\n\nmodule.exports = {\n  login,\n};\n","const { tagsService } = require(\"../services\");\n\nconst addExistingTag = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await tagsService.addExistingTag(req.body);\n    res.status(201).send(\"Added existing tag\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nconst addNewTag = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await tagsService.addNewTag(req.user.id, req.body);\n    res.status(201).send(\"Added new tag\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nconst deleteTagFromNote = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await tagsService.deleteTagFromNote(req.body.note_id, req.body.tag_id);\n    res.status(204).send(\"Deleted tag from note\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nconst deleteTag = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await tagsService.deleteTag(req.body.tag_id);\n    res.status(204).send(\"Deleted tag\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nconst updateTag = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await tagsService.updateTag(\n      req.body.tag_id,\n      req.body.tag_name,\n      req.body.hue,\n    );\n    res.status(204).send(\"Updated  tag\");\n  } catch (error) {\n    res.status(500).send(\"Something went wrong\");\n  }\n};\n\nmodule.exports = {\n  addExistingTag,\n  addNewTag,\n  deleteTagFromNote,\n  updateTag,\n  deleteTag,\n};\n","const { commentsService } = require(\"../services\");\n\nconst updateComment = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await commentsService.updateComment(\n      req.body.comment_id,\n      req.body.comment_text,\n    );\n    res.status(204).send(\"Successfully updated\");\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\nconst addComment = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await commentsService.addComment(\n      req.body.note_id,\n      req.body.comment_id,\n      req.body.comment_text,\n    );\n    res.status(201).send(\"Successfully added\");\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\nconst deleteComment = async (req, res) => {\n  res.set(\"Access-Control-Allow-Origin\", \"*\");\n  try {\n    await commentsService.deleteComment(req.body.comment_id);\n    res.status(204).send(\"Successfully deleted\");\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\nmodule.exports = {\n  addComment,\n  updateComment,\n  deleteComment,\n};\n","const messages = require(\"./messages.controller\");\nconst notes = require(\"./notes.controller\");\nconst info = require(\"./info.controller\");\nconst register = require(\"./register.controller\");\nconst login = require(\"./login.controller\");\nconst tags = require(\"./tags.controller\");\nconst comments = require(\"./comments.controller\");\n\nmodule.exports = {\n  notes,\n  messages,\n  info,\n  login,\n  register,\n  tags,\n  comments,\n};\n","/* eslint-disable object-curly-newline */\nconst express = require(\"express\");\nconst verify = require(\"./verifyToken\");\n\nconst {\n  messages,\n  notes,\n  info,\n  register,\n  login,\n  tags,\n  comments,\n} = require(\"../controllers\");\n\nconst router = express.Router();\n\nrouter.get(\"/message\", messages.getMessageById);\n\nrouter.get(\"/allMessages\", messages.listMessages);\n\nrouter.get(\"/getDailyNotes\", verify, notes.getDailyNotes);\n\nrouter.get(\"/note/:id\", notes.getNote);\n\nrouter.post(\"/getNotesByBook\", verify, notes.getNotesByBook);\n\nrouter.post(\"/searchNotes\", verify, notes.searchNotes);\n\nrouter.delete(\"/deleteNote\", verify, notes.deleteNote);\n\nrouter.put(\"/updateNote\", verify, notes.updateNote);\n\nrouter.post(\"/addComment\", verify, comments.addComment);\n\nrouter.delete(\"/deleteComment\", verify, comments.deleteComment);\n\nrouter.put(\"/updateComment\", verify, comments.updateComment);\n\nrouter.get(\"/getInitInfo\", verify, info.getInitInfo);\n\nrouter.post(\"/setReviewed\", verify, info.setReviewed);\n\nrouter.post(\"/addExistingTag\", verify, tags.addExistingTag);\n\nrouter.post(\"/addNewTag\", verify, tags.addNewTag);\n\nrouter.delete(\"/deleteTagFromNote\", verify, tags.deleteTagFromNote);\n\nrouter.delete(\"/deleteTag\", verify, tags.deleteTag);\n\nrouter.put(\"/updateTag\", verify, tags.updateTag);\n\nrouter.post(\"/post\", messages.newMessageEvent);\n\nrouter.post(\"/register\", register.register);\n\nrouter.post(\"/login\", login.login);\n\nmodule.exports = router;\n","require(\"dotenv\").config();\nconst express = require(\"express\");\n\nconst app = express();\nconst cors = require(\"cors\");\nconst routes = require(\"./routes\");\nconst { messagesService } = require(\"./services\");\n// const { notesService } = require('./services');\nconst db = require(\"./db\");\n\nconst init = async () => {\n  app.use(express.json());\n  app.use(\"/api\", routes);\n  app.use(cors()); // TODO configure before deployment\n\n  await messagesService.init();\n  await db.init();\n  // console.log(await notesService.getNotes(1, 3));\n\n  const PORT = process.env.PORT || 3000;\n\n  app.get(\"*\", (_, res) => {\n    res.send(\"hey\");\n  });\n\n  app.listen(PORT, async () => {\n    console.log(\"Server has been started on port 3000...\");\n    await messagesService.newMessageEvent();\n  });\n};\n\ninit();\n"]}